

----QUIT----(12 May 2023 17:49:00) CuisUniversity-5799.image priorSource: 4801971!

----STARTUP---- (12 May 2023 17:49:01) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5799.image!


----QUIT----(12 May 2023 17:49:01) CuisUniversity-5799.image priorSource: 9222569!

----STARTUP---- (15 May 2023 13:14:04) as C:\Users\juanp\Desktop\Exactas\Ingenieria de Software I\Imagen para TDD\windows64\CuisUniversity-5799.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

!classDefinition: #MarsRover category: 'CuisUniversity' stamp: 'JPL 5/15/2023 13:16:24'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

!classRemoval: #MarsRover stamp: 'JPL 5/15/2023 13:17:05'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #MarsRover category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:17:28'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #MarsRoverTest category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:17:39'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:18:49'!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	MarsRover new at: 0@0 facing: #Norte.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:19:00'!
ERROR!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:19:00'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:21:31' prior: 50619911!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	|rover|
	
	rover := MarsRover new at: 0@0 facing: #Norte.
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Norte equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:22:18'!
ERROR!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:22:18'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:23:28'!
Object subclass: #MarsRover
	instanceVariableNames: 'posicion'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #MarsRover category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:23:29'!
Object subclass: #MarsRover
	instanceVariableNames: 'posicion orientacion'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!
!MarsRover methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:23:25'!
at: unaCoordenada facing: unaDireccionCardinal

	posicion := unaCoordenada.
	orientacion := unaDireccionCardinal.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:23:54' prior: 50619957!
at: unaCoordenada facing: unaDireccionCardinal

	posicion := 0@0.
	orientacion := #Norte.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:23:57'!
ERROR!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:23:57'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:24:19'!
posicion
	^posicion! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:24:29'!
orientacion
	^orientacion! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:24:36'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:26:30'!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:27:44' prior: 50619990!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	|rover|
	
	rover := MarsRover new at: 0@0 facing: #Norte.
	
	rover avanzar.
	
	self assert: 0@1 equals: rover position.
	self assert: #Norte equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:27:50'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:27:50'!
ERROR!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:27:50'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:28:10'!
avanzar

	posicion := posicion + 0@1.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:28:12'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:28:12'!
ERROR!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:28:12'!
ERROR!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:28:40'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:28:40'!
ERROR!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:28:40'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:28:59' prior: 50620016!
avanzar

	posicion := posicion + 0 @ 1.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:29:01'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:29:01'!
ERROR!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:29:01'!
ERROR!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:29:53'!
PASSED!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:30:09'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:30:09'!
ERROR!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:30:09'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:30:52' prior: 50620043!
avanzar

	posicion := 0 @ 1.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:30:57'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:30:57'!
ERROR!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:30:57'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:31:17' prior: 50619995!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	|rover|
	
	rover := MarsRover new at: 0@0 facing: #Norte.
	
	rover avanzar.
	
	self assert: 0@1 equals: rover posicion.
	self assert: #Norte equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:31:35'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:31:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:32:43'!
crearRoverEnOrigenApuntandoAlNorte

	^MarsRover new at: 0@0 facing: #Norte.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:32:50' prior: 50619925!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Norte equals: rover orientacion.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:32:57' prior: 50620090!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover avanzar.
	
	self assert: 0@1 equals: rover posicion.
	self assert: #Norte equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:33:00'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:33:00'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:33:25'!
test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover retroceder.
	
	self assert: 0@-1 equals: rover posicion.
	self assert: #Norte equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:33:28'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:33:28'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:33:28'!
ERROR!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:33:28'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:33:38'!
retroceder

	posicion := 0 @ -1.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:33:40'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:33:40'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:33:40'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:34:13'!
test04rotarRoverALaDerechaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaDerecha.
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Este equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:34:16'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:34:16'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:34:16'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:34:16'!
ERROR!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:34:16'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:34:44'!
rotarALaDerecha

	orientacion := #Este! !

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:34:49'!
PASSED!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:35:35'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:35:35'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:35:35'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:35:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:35:39'!
test04rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Este equals: rover orientacion.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:35:52'!
test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Este equals: rover orientacion.! !

!methodRemoval: MarsRoverTest #test04rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:35:53'!
test04rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Este equals: rover orientacion.!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:36:00'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:36:00'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:36:00'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:36:00'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:36:00'!
ERROR!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:36:00'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:36:15'!
rotarALaIzquierda

	orientacion := #Oeste! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:36:20' prior: 50620245!
test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: 0@0 equals: rover posicion.
	self assert: #Oeste equals: rover orientacion.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:36:23'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:36:23'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:36:23'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:36:23'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:36:23'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:37:44'!
assert: unRover isAt: unaCoordenada facing: unaDireccionCardinal
	
	self assert: unaCoordenada equals: unRover posicion.
	self assert: unaDireccionCardinal equals: unRover orientacion.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:38:04' prior: 50620114!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .

	self assert: rover isAt: 0@0 facing: #Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:38:14' prior: 50620124!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover avanzar.
	
	self assert: rover isAt: 0@1 facing: #Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:38:21' prior: 50620142!
test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover retroceder.
	
	self assert: rover isAt: 0@-1 facing: #Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:38:28' prior: 50620182!
test04rotarRoverALaDerechaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaDerecha.
	
	self assert: rover isAt: 0@0 facing: #Este.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:38:34' prior: 50620294!
test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: rover isAt: 0@0 facing: #Oeste.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:38:38'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:38:38'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:38:38'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:38:38'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:38:38'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:39:22'!
test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces
	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover avanzar].
	
	self assert: rover isAt: 0@2 facing: #Norte.! !

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:39:26'!
FAILURE!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:39:26'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:39:34' prior: 50620074!
avanzar

	posicion := posicion + 0 @ 1.! !

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:39:39'!
ERROR!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:39:39'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:40:01' prior: 50620416!
avanzar

	posicion := posicion + (0 @ 1).! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:40:04'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:40:04'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:40:04'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:40:04'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:40:04'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:40:04'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:40:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:40:44'!
test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces

	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover retroceder].
	
	self assert: rover isAt: 0 @ -2 facing: #Norte.! !

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:40:48'!
FAILURE!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:40:48'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:40:59' prior: 50620167!
retroceder

	posicion := posicion - (0 @ -1).! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:41:02'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:41:02'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:41:02'!
FAILURE!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:41:02'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:41:02'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:41:02'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:41:02'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:41:20' prior: 50620480!
retroceder

	posicion := posicion - (0 @ 1).! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:41:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:41:51'!
test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces
	
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaDerecha].
	
	self assert: rover isAt: 0 @ 0 facing: #Sur.
	
	! !

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:41:55'!
FAILURE!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:41:55'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:42:57' prior: 50620211!
rotarALaDerecha

	(orientacion = #Norte) ifTrue: [orientacion := #Este] ifFalse: [orientacion := #Sur].
	! !

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:43:05'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:44:05'!
test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaIzquierda].
	
	self assert: rover isAt: 0 @ 0 facing: #Sur.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:44:12' prior: 50620575!
test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces

	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaIzquierda].
	
	self assert: rover isAt: 0 @ 0 facing: #Sur.! !

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:44:18'!
FAILURE!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:44:18'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:44:34' prior: 50620289!
rotarALaIzquierda

	(orientacion = #Norte) ifTrue: [orientacion := #Oeste] ifFalse: [orientacion := #Sur].! !

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:44:40'!
PASSED!

Object subclass: #DireccionCardinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #DireccionCardinal category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:46:18'!
Object subclass: #DireccionCardinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

DireccionCardinal subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #Norte category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:46:26'!
DireccionCardinal subclass: #Norte
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!
!DireccionCardinal methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:46:46'!
direccionALaDerecha
	self subclassResponsibility ! !
!DireccionCardinal methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:46:52'!
direccionALaIzquierda
	self subclassResponsibility ! !

DireccionCardinal subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #Sur category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:47:04'!
DireccionCardinal subclass: #Sur
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

DireccionCardinal subclass: #Este
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #Este category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:47:06'!
DireccionCardinal subclass: #Este
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

DireccionCardinal subclass: #Oeste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #Oeste category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:47:09'!
DireccionCardinal subclass: #Oeste
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!
!Este methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:47:44' overrides: 50620642!
direccionALaDerecha
	^Sur new! !
!Este methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:47:55' overrides: 50620647!
direccionALaIzquierda
	^Norte new! !
!Norte methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:48:06' overrides: 50620647!
direccionALaIzquierda
	^Oeste new! !
!Norte methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:48:11' overrides: 50620642!
direccionALaDerecha
	^Este new! !
!Oeste methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:48:25' overrides: 50620647!
direccionALaIzquierda
	^Sur new! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:48:30' overrides: 50620642!
direccionALaDerecha
	^Norte new! !
!Sur methodsFor: 'no messages' stamp: 'JPL 5/15/2023 13:48:40' overrides: 50620647!
direccionALaIzquierda
	^Este new! !
!Sur methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:48:48' overrides: 50620642!
direccionALaDerecha
	^Oeste new! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:49:30' prior: 50620564!
rotarALaDerecha

	orientacion := orientacion direccionALaDerecha .
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:49:41' prior: 50620607!
rotarALaIzquierda

	orientacion := orientacion direccionALaIzquierda .! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:49:50' prior: 50619964!
at: unaCoordenada facing: unaDireccionCardinal

	posicion := 0@0.
	orientacion := Norte new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:50:05' prior: 50620108!
crearRoverEnOrigenApuntandoAlNorte

	^MarsRover new at: 0@0 facing: Norte new.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:50:13' prior: 50620332!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .

	self assert: rover isAt: 0@0 facing: Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:50:20' prior: 50620341!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover avanzar.
	
	self assert: rover isAt: 0@1 facing: Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:50:59' prior: 50620350!
test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover retroceder.
	
	self assert: rover isAt: 0@-1 facing: Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:03' prior: 50620359!
test04rotarRoverALaDerechaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaDerecha.
	
	self assert: rover isAt: 0@0 facing: Este.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:07' prior: 50620369!
test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: rover isAt: 0@0 facing: Oeste.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:10' prior: 50620397!
test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces
	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover avanzar].
	
	self assert: rover isAt: 0@2 facing: Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:13' prior: 50620461!
test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces

	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover retroceder].
	
	self assert: rover isAt: 0 @ -2 facing: Norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:16' prior: 50620544!
test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces
	
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaDerecha].
	
	self assert: rover isAt: 0 @ 0 facing: Sur.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:20' prior: 50620586!
test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces

	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaIzquierda].
	
	self assert: rover isAt: 0 @ 0 facing: Sur.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:51:29' prior: 50620323!
assert: unRover isAt: unaCoordenada facing: unaDireccionCardinal
	
	self assert: unaCoordenada equals: unRover posicion.
	self assert: unaDireccionCardinal class equals: unRover orientacion class.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:51:31'!
FAILURE!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:51:32'!
FAILURE!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:51:36'!
FAILURE!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:52:52'!
FAILURE!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:52:52'!
FAILURE!

unaDireccionCardinal class!

unRover orientacion class!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:53:52' prior: 50620747!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .

	self assert: rover isAt: 0@0 facing: Norte new.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:53:55'!
PASSED!

!classDefinition: #MarsRoverTest category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:54:22'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'norte'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #MarsRoverTest category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:54:23'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'norte sur'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #MarsRoverTest category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:54:25'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'norte sur este'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!

!classDefinition: #MarsRoverTest category: 'MarsRoverEjercicio' stamp: 'JPL 5/15/2023 13:54:26'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'norte sur este oeste'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverEjercicio'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:54:21' overrides: 16961394!
setUp
	
	norte := Norte new.
	sur := Sur new.
	este := Este new.
	oeste := Oeste new.	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:54:49' prior: 50620897!
test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion

	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .

	self assert: rover isAt: 0@0 facing: norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:54:53' prior: 50620756!
test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover avanzar.
	
	self assert: rover isAt: 0@1 facing: norte.! !

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:54:54'!
PASSED!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:54:54'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:54:54'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:54:54'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:00' prior: 50620765!
test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover retroceder.
	
	self assert: rover isAt: 0@-1 facing: norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:03' prior: 50620774!
test04rotarRoverALaDerechaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaDerecha.
	
	self assert: rover isAt: 0@0 facing: este.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:06' prior: 50620784!
test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha

	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaIzquierda.
	
	self assert: rover isAt: 0@0 facing: oeste.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:10' prior: 50620794!
test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces
	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover avanzar].
	
	self assert: rover isAt: 0@2 facing: norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:13' prior: 50620804!
test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces

	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover retroceder].
	
	self assert: rover isAt: 0 @ -2 facing: norte.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:38' prior: 50620815!
test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces
	
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaDerecha].
	
	self assert: rover isAt: 0 @ 0 facing: sur.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:55:42' prior: 50620826!
test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces

	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaIzquierda].
	
	self assert: rover isAt: 0 @ 0 facing: sur.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:55:45'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:56:16'!
test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion

	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover rotarALaDerecha.
	
	rover avanzar.
	
	self assert: rover isAt: 1 @ 0 facing: este.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 13:56:18'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 13:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 13:56:18'!
FAILURE!
!DireccionCardinal methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:56:48'!
asUnitVector
	self subclassResponsibility ! !
!Este methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:58:41' overrides: 50621171!
asUnitVector
	^ 1@0! !
!Norte methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:58:58' overrides: 50621171!
asUnitVector
	^ 0@1! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:59:26' overrides: 50621171!
asUnitVector
	^ 1@0! !
!Oeste methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:59:38' prior: 50621184 overrides: 50621171!
asUnitVector
	^ -1@0! !
!Sur methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 13:59:50' overrides: 50621171!
asUnitVector
	^ 0@-1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:00:29' prior: 50620429!
avanzar

	posicion := posicion + orientacion asUnitVector .! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:00:36'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:01:12' prior: 50620512!
retroceder

	posicion := posicion - orientacion asUnitVector .! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:01:15'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:01:45'!
test11elRoverNoHaceNadaDadaUnaListaVacia
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover ejecutarComandos: ''.
	
	self assert: rover isAt: 0 @ 0 facing: norte.! !

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:01:49'!
ERROR!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:01:49'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:02:08'!
ejecutarComandos: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:02:21'!
ejecutarComandos
	! !

!methodRemoval: MarsRover #ejecutarComandos: stamp: 'JPL 5/15/2023 14:02:30'!
ejecutarComandos: aRenameMe1 
	self shouldBeImplemented.!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:02:33'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:02:33'!
ERROR!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:02:33'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:02:47'!
ejecutarComandos: unaSerieDeComandos
	! !
!Behavior method!
posicion
	#_coverageTracker2926777_ markAsExecuted.
	^ #_coverageTracker2926777_
		cover: (12 to: 19)
		declaredAt: (12 to: 19)
		by: posicion.! !
!Behavior method!
direccionALaDerecha
	#_coverageTracker2926805_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926805_
		coverAll:
			{23 to: 25}
		by: Sur.
	#_coverageTracker2926805_
		coverAll:
			{27 to: 29}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
at: unaCoordenada facing: unaDireccionCardinal
	#_coverageTracker2926823_ markAsExecuted.
	#_coverageTracker2926823_
		cover: (50 to: 57)
		declaredAt: (50 to: 57)
		by:
			(posicion _ [ | receiver1 |
			receiver1 _ #_coverageTracker2926823_
				coverAll:
					{62 to: 62}
				byLiteralOrPseudoVariable: 0.
			#_coverageTracker2926823_
				coverAll:
					{63 to: 63}
				evaluating: [
					receiver1 @
						(#_coverageTracker2926823_
							coverAll:
								{64 to: 64}
							byLiteralOrPseudoVariable: 0) ]
				thatSends: #@
				to: receiver1 ] value).
	#_coverageTracker2926823_
		cover: (68 to: 78)
		declaredAt: (68 to: 78)
		by:
			(orientacion _ [ | receiver2 |
			receiver2 _ #_coverageTracker2926823_
				coverAll:
					{83 to: 87}
				by: Norte.
			#_coverageTracker2926823_
				coverAll:
					{89 to: 91}
				evaluating: [ receiver2 new ]
				thatSends: #new
				to: receiver2 ] value).! !
!Behavior method!
asUnitVector
	#_coverageTracker2926829_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926829_
		coverAll:
			{17 to: 17}
		byLiteralOrPseudoVariable: 0.
	#_coverageTracker2926829_
		coverAll:
			{18 to: 18}
		evaluating: [
			receiver1 @
				(#_coverageTracker2926829_
					coverAll:
						{18 to: 19}
					byLiteralOrPseudoVariable: 1) ]
		thatSends: #@
		to: receiver1 ] value.! !
!Behavior method!
direccionALaIzquierda
	#_coverageTracker2926845_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926845_
		coverAll:
			{25 to: 28}
		by: Este.
	#_coverageTracker2926845_
		coverAll:
			{30 to: 32}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
direccionALaIzquierda
	#_coverageTracker2926853_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926853_
		coverAll:
			{25 to: 29}
		by: Oeste.
	#_coverageTracker2926853_
		coverAll:
			{31 to: 33}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
avanzar
	#_coverageTracker2926865_ markAsExecuted.
	#_coverageTracker2926865_
		cover: (23 to: 30)
		declaredAt: (11 to: 18)
		by:
			(posicion _ [ | receiver2 |
			receiver2 _ #_coverageTracker2926865_
				cover: (11 to: 18)
				declaredAt: (11 to: 18)
				by: posicion.
			#_coverageTracker2926865_
				coverAll:
					{32 to: 32}
				evaluating: [
					receiver2 +
						[ | receiver1 |
						receiver1 _ #_coverageTracker2926865_
							cover: (34 to: 44)
							declaredAt: (34 to: 44)
							by: orientacion.
						#_coverageTracker2926865_
							coverAll:
								{46 to: 57}
							evaluating: [ receiver1 asUnitVector ]
							thatSends: #asUnitVector
							to: receiver1 ] value ]
				thatSends: #+
				to: receiver2 ] value).! !
!Behavior method!
direccionALaDerecha
	#_coverageTracker2926873_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926873_
		coverAll:
			{23 to: 27}
		by: Oeste.
	#_coverageTracker2926873_
		coverAll:
			{29 to: 31}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
direccionALaIzquierda
	#_coverageTracker2926887_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926887_
		coverAll:
			{25 to: 27}
		by: Sur.
	#_coverageTracker2926887_
		coverAll:
			{29 to: 31}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
direccionALaDerecha
	#_coverageTracker2926893_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926893_
		coverAll:
			{23 to: 27}
		by: Norte.
	#_coverageTracker2926893_
		coverAll:
			{29 to: 31}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
asUnitVector
	#_coverageTracker2926909_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926909_
		coverAll:
			{17 to: 18}
		byLiteralOrPseudoVariable: -1.
	#_coverageTracker2926909_
		coverAll:
			{19 to: 19}
		evaluating: [
			receiver1 @
				(#_coverageTracker2926909_
					coverAll:
						{19 to: 20}
					byLiteralOrPseudoVariable: 0) ]
		thatSends: #@
		to: receiver1 ] value.! !
!Behavior method!
ejecutarComandos
	#_coverageTracker2926917_ markAsExecuted.! !
!Behavior method!
direccionALaIzquierda
	#_coverageTracker2926935_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926935_
		coverAll:
			{25 to: 29}
		by: Norte.
	#_coverageTracker2926935_
		coverAll:
			{31 to: 33}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
rotarALaIzquierda
	#_coverageTracker2926937_ markAsExecuted.
	#_coverageTracker2926937_
		cover: (36 to: 46)
		declaredAt: (21 to: 31)
		by:
			(orientacion _ [ | receiver1 |
			receiver1 _ #_coverageTracker2926937_
				cover: (21 to: 31)
				declaredAt: (21 to: 31)
				by: orientacion.
			#_coverageTracker2926937_
				coverAll:
					{48 to: 68}
				evaluating: [ receiver1 direccionALaIzquierda ]
				thatSends: #direccionALaIzquierda
				to: receiver1 ] value).! !
!Behavior method!
retroceder
	#_coverageTracker2926955_ markAsExecuted.
	#_coverageTracker2926955_
		cover: (26 to: 33)
		declaredAt: (14 to: 21)
		by:
			(posicion _ [ | receiver2 |
			receiver2 _ #_coverageTracker2926955_
				cover: (14 to: 21)
				declaredAt: (14 to: 21)
				by: posicion.
			#_coverageTracker2926955_
				coverAll:
					{35 to: 35}
				evaluating: [
					receiver2 -
						[ | receiver1 |
						receiver1 _ #_coverageTracker2926955_
							cover: (37 to: 47)
							declaredAt: (37 to: 47)
							by: orientacion.
						#_coverageTracker2926955_
							coverAll:
								{49 to: 60}
							evaluating: [ receiver1 asUnitVector ]
							thatSends: #asUnitVector
							to: receiver1 ] value ]
				thatSends: #-
				to: receiver2 ] value).! !
!Behavior method!
asUnitVector
	#_coverageTracker2926961_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926961_
		coverAll:
			{17 to: 17}
		byLiteralOrPseudoVariable: 0.
	#_coverageTracker2926961_
		coverAll:
			{18 to: 18}
		evaluating: [
			receiver1 @
				(#_coverageTracker2926961_
					coverAll:
						{19 to: 20}
					byLiteralOrPseudoVariable: -1) ]
		thatSends: #@
		to: receiver1 ] value.! !
!Behavior method!
asUnitVector
	#_coverageTracker2926975_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926975_
		coverAll:
			{17 to: 17}
		byLiteralOrPseudoVariable: 1.
	#_coverageTracker2926975_
		coverAll:
			{18 to: 18}
		evaluating: [
			receiver1 @
				(#_coverageTracker2926975_
					coverAll:
						{18 to: 19}
					byLiteralOrPseudoVariable: 0) ]
		thatSends: #@
		to: receiver1 ] value.! !
!Behavior method!
rotarALaDerecha
	#_coverageTracker2926982_ markAsExecuted.
	#_coverageTracker2926982_
		cover: (34 to: 44)
		declaredAt: (19 to: 29)
		by:
			(orientacion _ [ | receiver1 |
			receiver1 _ #_coverageTracker2926982_
				cover: (19 to: 29)
				declaredAt: (19 to: 29)
				by: orientacion.
			#_coverageTracker2926982_
				coverAll:
					{46 to: 64}
				evaluating: [ receiver1 direccionALaDerecha ]
				thatSends: #direccionALaDerecha
				to: receiver1 ] value).! !
!Behavior method!
direccionALaDerecha
	#_coverageTracker2926990_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker2926990_
		coverAll:
			{23 to: 26}
		by: Este.
	#_coverageTracker2926990_
		coverAll:
			{28 to: 30}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.! !
!Behavior method!
orientacion
	#_coverageTracker2926996_ markAsExecuted.
	^ #_coverageTracker2926996_
		cover: (15 to: 25)
		declaredAt: (15 to: 25)
		by: orientacion.! !
!Behavior method!
ejecutarComandos: unaSerieDeComandos
	#_coverageTracker2927014_ markAsExecuted.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:02:50'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:02:50'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:02:50'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:02:50'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:02:50'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:02:51'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:02:51'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:02:51'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:02:51'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:02:51'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:02:51'!
PASSED!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:02:55'!
PASSED!

----SNAPSHOT----(15 May 2023 14:03:02) CuisUniversity-5799.image priorSource: 9222790!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:05:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:05:59'!
test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover ejecutarComandos: 'f'.
	
	self assert: rover isAt: 0 @ 1 facing: norte.! !

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:06:02'!
FAILURE!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:06:02'!
FAILURE!

!methodRemoval: MarsRover #ejecutarComandos stamp: 'JPL 5/15/2023 14:06:16'!
ejecutarComandos
	!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:06:45' prior: 50621367!
ejecutarComandos: unaSerieDeComandos

	(unaSerieDeComandos  = 'f') ifTrue: [self avanzar].
	! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:06:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:07:14'!
test13elRoverEjecutaTodosLosComandosDeUnaLista
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover ejecutarComandos: 'ffrrllbb'.
	
	self assert: rover isAt: 0 @ 0 facing: norte.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:07:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:07:42' prior: 50621804!
test13elRoverEjecutaTodosLosComandosDeUnaLista
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover ejecutarComandos: 'ffrr'.
	
	self assert: rover isAt: 0 @ 2 facing: sur.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:07:44'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:07:44'!
FAILURE!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:07:44'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:08:16'!
esUnComandoValido: command
	
	^((command = $f) | (command = $b) | (command = $l) | (command = $r))! !
!MarsRover class methodsFor: 'no messages' stamp: 'JPL 5/15/2023 14:09:21'!
comandoInvalidoErrorDescription
	^'Comando inválido'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:09:35' prior: 50621750!
ejecutarComandos: listaDeComandos
	
	listaDeComandos do: [ :command |
		
		(self esUnComandoValido: command) ifFalse: [ self error: self class comandoInvalidoErrorDescription ].
		
		(command = $f) ifTrue: [ self avanzar ].
		
		(command = $b) ifTrue: [ self retroceder ].
		
		(command = $l) ifTrue: [ self rotarALaIzquierda ].
		
		(command = $r) ifTrue: [ self rotarALaDerecha ].
		
		].! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:09:38'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:10:04' prior: 50621942!
ejecutarComandos: listaDeComandos
	
	listaDeComandos do: [ :command |
		
		(command = $f) ifTrue: [ self avanzar ].
		
		(command = $b) ifTrue: [ self retroceder ].
		
		(command = $l) ifTrue: [ self rotarALaIzquierda ].
		
		(command = $r) ifTrue: [ self rotarALaDerecha ].
		
		].! !

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:10:12'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:10:49'!
test14comandoInvalidoAbortaLaEjecucionYLevantaUnError
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	self should: [rover ejecutarComandos: 'ffrrEXPLOTAllbb']
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = MarsRover comandoInvalidoErrorDescription ].
		
	self assert: rover isAt: 0 @ 2 facing: sur.! !

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:10:56'!
FAILURE!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:10:56'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:11:14' prior: 50622010!
ejecutarComandos: listaDeComandos
	
	listaDeComandos do: [ :command |
		
		(self esUnComandoValido: command) ifFalse: [ self error: self class comandoInvalidoErrorDescription ].
		
		(command = $f) ifTrue: [ self avanzar ].
		
		(command = $b) ifTrue: [ self retroceder ].
		
		(command = $l) ifTrue: [ self rotarALaIzquierda ].
		
		(command = $r) ifTrue: [ self rotarALaDerecha ].
		
		].! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:11:17'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:11:38'!
assertThat: aClosureToRun failsWithErrorDescription: anErrorDescription

	self should: aClosureToRun
		raise: Error
		withExceptionDo: [ :anError |
			self assert: anError messageText = anErrorDescription ].
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JPL 5/15/2023 14:12:36' prior: 50622026!
test14comandoInvalidoAbortaLaEjecucionYLevantaUnError
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
		
	self assertThat: [rover ejecutarComandos: 'ffrrEXPLOTAllbb'.] failsWithErrorDescription: MarsRover comandoInvalidoErrorDescription.
		
	self assert: rover isAt: 0 @ 2 facing: sur.! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:12:39'!
PASSED!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:14:10'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:14:11'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:14:11'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:14:11'!
PASSED!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:17:06'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:17:06'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:17:06'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:17:06'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:17:06'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:17:06'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:17:07'!
PASSED!

----SNAPSHOT----(15 May 2023 14:17:36) CuisUniversity-5799.image priorSource: 9282324!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:17:39'!
PASSED!
!MarsRover methodsFor: 'initialization' stamp: 'JPL 5/15/2023 14:18:47' prior: 50620734!
at: unaCoordenada facing: unaDireccionCardinal

	posicion := unaCoordenada .
	orientacion := unaDireccionCardinal .! !

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:18:49'!
PASSED!
!MarsRoverTest methodsFor: 'creation' stamp: 'JPL 5/15/2023 14:19:00' prior: 50620741!
crearRoverEnOrigenApuntandoAlNorte

	^MarsRover new at: 0@0 facing: norte.
	
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'JPL 5/15/2023 14:21:58'!
test06avanzarRoverNVecesLoDesplazaHaciaAdelanteNVeces
	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover avanzar].
	
	self assert: rover isAt: 0@2 facing: norte.! !

!methodRemoval: MarsRoverTest #test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces stamp: 'JPL 5/15/2023 14:21:58'!
test06avanzarRoverMultiplesVecesLoDesplazaHaciaAdelanteMultiplesVeces
	
	|rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover avanzar].
	
	self assert: rover isAt: 0@2 facing: norte.!
!MarsRoverTest methodsFor: 'testing' stamp: 'JPL 5/15/2023 14:22:08'!
test07retrocederRoverNVecesLoDesplazaHaciaAtrasNVeces

	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover retroceder].
	
	self assert: rover isAt: 0 @ -2 facing: norte.! !

!methodRemoval: MarsRoverTest #test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces stamp: 'JPL 5/15/2023 14:22:08'!
test07retrocederRoverMultiplesVecesLoDesplazaHaciaAtrasMultiplesVeces

	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover retroceder].
	
	self assert: rover isAt: 0 @ -2 facing: norte.!
!MarsRoverTest methodsFor: 'testing' stamp: 'JPL 5/15/2023 14:22:19'!
test08rotarElRoverALaDerechaNVecesLoRota90GradosALaDerechaNVeces
	
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaDerecha].
	
	self assert: rover isAt: 0 @ 0 facing: sur.
	
	! !

!methodRemoval: MarsRoverTest #test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces stamp: 'JPL 5/15/2023 14:22:19'!
test08rotarElRoverALaDerechaMultiplesVecesLoRota90GradosALaDerechaMultiplesVeces
	
	| rover|
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaDerecha].
	
	self assert: rover isAt: 0 @ 0 facing: sur.
	
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'JPL 5/15/2023 14:22:31'!
test09rotarElRoverALaIzquierdaNVecesLoRota90GradosALaIzquierdaNVeces

	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaIzquierda].
	
	self assert: rover isAt: 0 @ 0 facing: sur.! !

!methodRemoval: MarsRoverTest #test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces stamp: 'JPL 5/15/2023 14:22:31'!
test09rotarElRoverALaIzquierdaMultiplesVecesLoRota90GradosALaIzquierdaMultiplesVeces

	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	2 timesRepeat: [rover rotarALaIzquierda].
	
	self assert: rover isAt: 0 @ 0 facing: sur.!
!MarsRoverTest methodsFor: 'testing' stamp: 'JPL 5/15/2023 14:22:49'!
test11elRoverNoHaceNadaDadaUnaListaDeComandosVacia
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover ejecutarComandos: ''.
	
	self assert: rover isAt: 0 @ 0 facing: norte.! !

!methodRemoval: MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaVacia stamp: 'JPL 5/15/2023 14:22:49'!
test11elRoverNoHaceNadaDadaUnaListaVacia
	| rover|
	
	rover := self crearRoverEnOrigenApuntandoAlNorte .
	
	rover ejecutarComandos: ''.
	
	self assert: rover isAt: 0 @ 0 facing: norte.!

!testRun: #MarsRoverTest #test01roverEsCreadoEnUnaPosicionYApuntandoAUnaDireccion stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test02avanzarRoverLoDesplazaUnaUnidadHaciaAdelante stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test03retrocederRoverLoDesplazaUnaUnidadHaciaAtras stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test04rotarRoverALaDerechaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test05rotarRoverALaIzquierdaLoRota90GradosALaDerecha stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test06avanzarRoverNVecesLoDesplazaHaciaAdelanteNVeces stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test07retrocederRoverNVecesLoDesplazaHaciaAtrasNVeces stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test08rotarElRoverALaDerechaNVecesLoRota90GradosALaDerechaNVeces stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test09rotarElRoverALaIzquierdaNVecesLoRota90GradosALaIzquierdaNVeces stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test10rotarElRoverYAvanzarLoDesplazaHaciaAdelanteEnSuNuevaDireccion stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test11elRoverNoHaceNadaDadaUnaListaDeComandosVacia stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test12elRoverEjecutaElComandoDeUnaListaDeLongitudUno stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test13elRoverEjecutaTodosLosComandosDeUnaLista stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!

!testRun: #MarsRoverTest #test14comandoInvalidoAbortaLaEjecucionYLevantaUnError stamp: 'JPL 5/15/2023 14:23:57'!
PASSED!